name: Build and Push Docker Image

on:
  push:
    paths:
      - 'Blue/**'
      - 'Green/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Ensure at least two commits are fetched for diff

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Detect changes in Blue or Green directory
      - name: Detect changes
        id: changes
        run: |
          # Fallback to HEAD~1 if github.event.before is invalid
          BEFORE_COMMIT=${{ github.event.before || 'HEAD~1' }}
          CURRENT_COMMIT=${{ github.sha }}

          # Debug: Output commit references
          echo "Before commit: $BEFORE_COMMIT"
          echo "Current commit: $CURRENT_COMMIT"

          # Detect changes
          if git diff --name-only "$BEFORE_COMMIT" "$CURRENT_COMMIT" | grep -q '^Blue/'; then
            echo "BUILD_CONTEXT=Blue" >> $GITHUB_ENV
            echo "TAG_NAME=blue" >> $GITHUB_ENV
          elif git diff --name-only "$BEFORE_COMMIT" "$CURRENT_COMMIT" | grep -q '^Green/'; then
            echo "BUILD_CONTEXT=Green" >> $GITHUB_ENV
            echo "TAG_NAME=green" >> $GITHUB_ENV
          else
            echo "No relevant changes detected."
            exit 0
          fi
        shell: bash

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        if: env.BUILD_CONTEXT # Only run if BUILD_CONTEXT is set
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Step 5: Build and push the Docker image
      - name: Build and push Docker image
        if: env.BUILD_CONTEXT # Only run if BUILD_CONTEXT is set
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/blue-green:${{ env.TAG_NAME }}
          docker build -t $IMAGE_NAME ${{ env.BUILD_CONTEXT }}
          docker push $IMAGE_NAME
          
      # Step 6: SSH into EC2 and run deploy.sh
      - name: Deploy to EC2
        if: env.BUILD_CONTEXT
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            chmod +x /home/ubuntu/Blue-Green/deploy.sh
            /home/ubuntu/Blue-Green/deploy.sh